user nginx nginx;
worker_processes 1;

events {
  worker_connections  1024;
}

http {
  include /usr/pkg/etc/nginx/mime.types;
  default_type application/octet-stream;
  server_tokens off;

  sendfile on;

  keepalive_timeout 30;
  gzip on;

  server {
    listen 80 default_server;
    listen [::]:80 default_server;

    # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
    return 301 https://$host$request_uri;
  }

  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
    ssl_certificate /usr/pkg/etc/nginx/certs/ew.crt;
    ssl_certificate_key /usr/pkg/etc/nginx/certs/ew.key;

    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # modern configuration. tweak to your needs.
    ssl_protocols TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_prefer_server_ciphers on;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security max-age=15768000;

    add_header X-Frame-Options "DENY" always;
    add_header X-Xss-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Content-Security-Policy "script-src 'self'" always;
    add_header Referrer-Policy "no-referrer" always;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    # ssl_stapling on;
    # ssl_stapling_verify on;

    # verify chain of trust of OCSP response using Root CA and Intermediate certs
    # ssl_trusted_certificate /path/to/root_CA_cert_plus_intermediates;

    resolver 1.1.1.1;

    location / {
      root /var/www;
      index index.html;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
      add_header Content-Type "application/json; charset=utf-8" always;
      return 500 '{"error": 500}';
    }

    error_page   404 /404.html;
    location = /404.html {
      add_header Content-Type "application/json; charset=utf-8" always;
      return 404 '{"error": 404}';
    }
  }
}